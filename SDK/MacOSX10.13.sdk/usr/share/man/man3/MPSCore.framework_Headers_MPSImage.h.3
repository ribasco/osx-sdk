.TH "MPSImage.h" 3 "Thu Feb 8 2018" "Version MetalPerformanceShaders-100" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSImage.h
.SH SYNOPSIS
.br
.PP
\fC#include <MPSCore/MPSCoreTypes\&.h>\fP
.br
\fC#import <Metal/MTLBuffer\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBMPSImageDescriptor\fP"
.br
.ti -1c
.RI "protocol \fB<MPSImageAllocator >\fP"
.br
.ti -1c
.RI "struct \fBMPSImageReadWriteParams\fP"
.br
.ti -1c
.RI "class \fBMPSImage\fP"
.br
.ti -1c
.RI "class \fBMPSTemporaryImage\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef NSArray< \fBMPSImage\fP * > \fBMPSImageBatch\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBMPSPurgeableState\fP "
.br
.ti -1c
.RI "enum \fBMPSDataLayout\fP "
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "NSUInteger \fBMPSImageBatchIncrementReadCount\fP (\fBMPSImageBatch\fP *__nonnull batch, NSInteger amount) ''"
.br
.ti -1c
.RI "NSUInteger void \fBMPSImageBatchSynchronize\fP (\fBMPSImageBatch\fP *__nonnull batch, __nonnull id< MTLCommandBuffer > cmdBuf) ''"
.br
.ti -1c
.RI "enum \fBMPSPurgeableState\fP \fBNS_ENUM_AVAILABLE\fP (10_11, 8_0) MPSPurgeableState"
.br
.ti -1c
.RI "enum \fBMPSDataLayout\fP \fBNS_ENUM_AVAILABLE\fP (10_13, 11_0) MPSDataLayout"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "typedef \fBNS_ENUM_AVAILABLE\fP"
.br
.ti -1c
.RI "\fBMPSPurgeableStateAllocationDeferred\fP"
.br
.ti -1c
.RI "\fBMPSPurgeableStateKeepCurrent\fP"
.br
.ti -1c
.RI "\fBMPSPurgeableStateNonVolatile\fP"
.br
.ti -1c
.RI "\fBMPSPurgeableStateVolatile\fP"
.br
.ti -1c
.RI "\fBMPSPurgeableStateEmpty\fP"
.br
.ti -1c
.RI "\fBMPSDataLayoutHeightxWidthxFeatureChannels\fP"
.br
.ti -1c
.RI "\fBMPSDataLayoutFeatureChannelsxHeightxWidth\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef NSArray<\fBMPSImage\fP*> \fBMPSImageBatch\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBMPSDataLayout\fP"

.SS "enum \fBMPSPurgeableState\fP"

.SH "Function Documentation"
.PP 
.SS "NSUInteger MPSImageBatchIncrementReadCount (\fBMPSImageBatch\fP *__nonnull batch, NSInteger amount)"
raise or lower the readcount of a batch by a set amount  In some circumstances, a \fBMPSImage\fP may appear in a MPSImageBatch multiple times\&. This is particularly common when the \fBMPSImage\fP serves as an accumulator across the entire batch, such as when accumulating gradients for convolution weight update or batch statistics for batch normalization\&. \fBA\fP naive function would then end up incrementing the state multiple times, probably leading to an error\&.
.PP
\fBMPSImageBatchIncrementReadCount()\fP will efficiently increment the readCounts of each object in the batch only once, avoiding this problem\&. Non-temporary images and images with readCount already 0 will be ignored\&.
.PP
\fBParameters:\fP
.RS 4
\fIbatch\fP The MPSImageBatch to increment 
.br
\fIamount\fP The value to add to the read count for each unique image in the batch 
.RE
.PP
\fBReturns:\fP
.RS 4
The number of different images in the batch 
.RE
.PP

.SS "NSUInteger void MPSImageBatchSynchronize (\fBMPSImageBatch\fP *__nonnull batch, __nonnull id< MTLCommandBuffer > cmdBuf)"
Call [MTLBlitEncoder synchronizeResource:] on unique resources 
.SS "enum \fBMPSPurgeableState\fP NS_ENUM_AVAILABLE (10_11, 8_0)"

.SS "enum \fBMPSDataLayout\fP NS_ENUM_AVAILABLE (10_13, 11_0)"

.SH "Variable Documentation"
.PP 
.SS "MPSDataLayoutFeatureChannelsxHeightxWidth"

.SS "MPSDataLayoutHeightxWidthxFeatureChannels"

.SS "MPSPurgeableStateAllocationDeferred"

.SS "MPSPurgeableStateEmpty"

.SS "MPSPurgeableStateKeepCurrent"

.SS "MPSPurgeableStateNonVolatile"

.SS "MPSPurgeableStateVolatile"

.SS "typedef    NS_ENUM_AVAILABLE"

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
